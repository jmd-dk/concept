# GitHub action testing the code base by running the test suite

on:
  push:
    paths-ignore:
    - '.env'
    - '.gitignore'
    - '.paths'
    - 'COPYING'
    - 'README.md'
    - 'installer'
    - 'concept/docs/**'


#            && rm -rf "${concept_dir}" \
#            && cp -r /github/concept "${concept_dir}" \

jobs:
  basic:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: basic # test suite
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t basic \
        '

  concept_vs_class_pm:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: concept_vs_class_pm
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t concept_vs_class_pm \
        '

  multicomponent:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: multicomponent
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t multicomponent \
        '

  neutrino:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: neutrino
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t neutrino \
        '

  optimizations:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: optimizations
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t optimizations \
        '

  pure_python_pp:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: pure_python_pp
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t pure_python_pp \
        '

  pure_python_pm:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: pure_python_pm
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t pure_python_pm \
        '

  pure_python_p3m:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: pure_python_p3m
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t pure_python_p3m \
        '

  nprocs_pp:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: nprocs_pp
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t nprocs_pp \
        '

  nprocs_pm:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: nprocs_pm
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t nprocs_pm \
        '

  nprocs_p3m:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: nprocs_p3m
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t nprocs_p3m \
        '

  friedmann:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: friedmann
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t friedmann \
        '

  realize:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: realize
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t realize \
        '

  powerspec:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: powerspec
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t powerspec \
        '

  gadget:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: gadget
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t gadget \
        '

  drift_nohubble:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: drift_nohubble
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t drift_nohubble \
        '

  drift:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: drift
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t drift \
        '

  kick_pp_without_ewald:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: kick_pp_without_ewald
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t kick_pp_without_ewald \
        '

  kick_pp_with_ewald:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: kick_pp_with_ewald
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t kick_pp_with_ewald \
        '

  concept_vs_gadget_pp:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: concept_vs_gadget_pp
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t concept_vs_gadget_pp \
        '

  concept_vs_gadget_p3m:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: concept_vs_gadget_p3m
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t concept_vs_gadget_p3m \
        '

  fluid_drift_rigid_nohubble:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_drift_rigid_nohubble
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_drift_rigid_nohubble \
        '

  fluid_drift_rigid:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_drift_rigid
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_drift_rigid \
        '

  fluid_gravity_nohubble:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_gravity_nohubble
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_gravity_nohubble \
        '

  fluid_gravity:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_gravity
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_gravity \
        '

  fluid_vacuum:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_vacuum
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_vacuum \
        '

  fluid_vs_particles:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_vs_particles
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_vs_particles \
        '

  fluid_pressure:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: fluid_pressure
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t fluid_pressure \
        '

  render:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: render
      run: |
        docker run \
        -v ${{github.workspace}}:/github \
        jmddk/concept:master /usr/bin/env bash -c ': \
            && cd / \
            && source ~/.bashrc \
            && concept -t render \
        '


