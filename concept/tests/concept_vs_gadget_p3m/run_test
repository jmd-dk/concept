#!/usr/bin/env bash

# This script performs a comparison test between the CO𝘕CEPT code's
# P3M implementation and the GADGET code's TreePM implementation.

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "${this_dir}")"

# Set up error trapping
ctrl_c(){
    trap : 0
    exit 2
}
abort(){
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Cleanup from last test run
"${this_dir}/clean"

# Generate ICs
echo "$(cat "${this_dir}/params")
output_dirs  = {'snapshot': '${this_dir}'}
output_bases = {'snapshot': 'IC'}
output_times = {'snapshot': a_begin}
initial_conditions = {
    'species': 'matter',
    'N'      : 8**3,
}
enable_class_background = True  # Do use CLASS when creating the initial conditions
" > "${this_dir}/ic.params"
"${concept}" -n 1 -p "${this_dir}/ic.params" --local
mv "${this_dir}/IC"* "${this_dir}/IC"

# !!!
exit 1

# Run the CO𝘕CEPT code on the generated ICs
"${concept}" -n 1 -p "${this_dir}/params" --local

# Run the GADGET code on the generated ICs
Gadget2_local_dir="${this_dir}/Gadget2"
mkdir -p "${Gadget2_local_dir}"
cp "${Gadget2_dir}/"* "${Gadget2_local_dir}" 2>/dev/null || :
"${concept}" -u gadget "${Gadget2_local_dir}" -p "${this_dir}/params"
(                             \
    cd "${Gadget2_local_dir}" \
    && make clean             \
    && make                   \
    && ./Gadget2 params       \
)

# Analyze the output snapshots
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Test ran successfully. Deactivate traps.
trap : 0
