#!/usr/bin/env bash

# This script runs the same, random initial conditions in both compiled
# and pure Python mode and compares the results. The PP algorithm is used.

# Number of processes to use
nprocs_list=(1 2 4)

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "$(dirname "${this_dir}")")"

# Set up error trapping
ctrl_c() {
    trap : 0
    exit 2
}
abort() {
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Create the Ewald grid using Cython
ewald_gridsize="$(get_param ewald_gridsize)"
echo "ewald_gridsize = ${ewald_gridsize}" > "${this_dir}/param_ewald"
"${concept}"                            \
    -n 1                                \
    -p "${this_dir}/param_ewald"        \
    -m "import ewald; ewald.tabulate()" \
    --local

# Generate initial conditions
echo "$(cat "${this_dir}/param")
output_dirs  = {'snapshot': '${this_dir}'}
output_bases = {'snapshot': 'ic'}
output_times = {'snapshot': a_begin}
initial_conditions = {
    'species': 'matter',
    'N'      : 4**3,
}
" > "${this_dir}/ic.param"
"${concept}"                  \
    -n 1                      \
    -p "${this_dir}/ic.param" \
    --local
mv "${this_dir}/ic_"* "${this_dir}/ic.hdf5"

# Run the COùòïCEPT code on the generated initial conditions
for n in ${nprocs_list[@]}; do
    "${concept}" -n ${n} -p "${this_dir}/param" --local
    mv "${this_dir}/output" "${this_dir}/output_cython_${n}"
done

# Run the COùòïCEPT code in pure Python mode on the generated initial conditions
for n in ${nprocs_list[@]}; do
    "${concept}" -n ${n} -p "${this_dir}/param" --pure-python --local
    mv "${this_dir}/output" "${this_dir}/output_python_${n}"
done

# Tabulate the Ewald grid using pure Python
mv "${reusable_dir}/ewald/${ewald_gridsize}.hdf5" "${this_dir}/ewald_cython.hdf5"
"${concept}"                            \
    -n 1                                \
    -p "${this_dir}/param_ewald"        \
    -m "import ewald; ewald.tabulate()" \
    --pure-python --local
mv "${reusable_dir}/ewald/${ewald_gridsize}.hdf5" "${this_dir}/ewald_python.hdf5"

# Analyse the output snapshots and Ewald grids
"${concept}" -n 1 -p "${this_dir}/param" -m "${this_dir}/analyze.py" \
    --pure-python --local

# Test ran successfully. Deactivate traps.
trap : 0
