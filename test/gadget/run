#!/usr/bin/env bash

# This script performs a crude test of the GADGET-2 installation by running
# a small GADGET-2 simulation and measuring the growth of momentum spread.

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "$(dirname "${this_dir}")")"

# Set up error trapping
ctrl_c() {
    trap : 0
    exit 2
}
abort() {
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Generate initial conditions
echo "$(cat "${this_dir}/param")
output_dirs  = {'snapshot': '${this_dir}'}
output_bases = {'snapshot': 'ic'}
output_times = {'snapshot': a_begin}
initial_conditions = {
    'name'   : 'GADGET halo',
    'species': 'matter',
    'N'      : 8**3,
}
" > "${this_dir}/ic.param"
"${concept}" -n 1 -p "${this_dir}/ic.param" --local
mv "${this_dir}/ic_"* "${this_dir}/ic"

# Run the GADGET-2 code on the generated initial conditions
Gadget2_local_dir="${this_dir}/Gadget2"
mkdir -p "${Gadget2_local_dir}"
cp "${Gadget2_dir}/"* "${Gadget2_local_dir}" 2>/dev/null || :
"${concept}" -u gadget "${Gadget2_local_dir}" -p "${this_dir}/param"
(                                        \
    cd "${Gadget2_local_dir}"            \
    && make clean                        \
    && make                              \
    && "${mpiexec}" -n 1 ./Gadget2 param \
)

# Analyse the output by comparing the momentum spread
# in the beginning and final snapshot.
info_0="$("${concept}" -u info --stats "${Gadget2_local_dir}/output/snapshot_000" --local)"
info_1="$("${concept}" -u info --stats "${Gadget2_local_dir}/output/snapshot_001" --local)"
momentum_spread_0="$(echo "${info_0}" | grep 'momentum spread' | awk '{print $3, $4, $5}')"
momentum_spread_1="$(echo "${info_1}" | grep 'momentum spread' | awk '{print $3, $4, $5}')"
momentum_spread_growth="$("${concept}" -m "
from commons import *
momentum_spreads = ('${momentum_spread_0}', '${momentum_spread_1}')
mean_momentum_spreads = []
for momentum_spread in momentum_spreads:
    for r, c in unicode_superscripts.items():
        if not c:
            continue
        momentum_spread = momentum_spread.replace(c, r)
    mean_momentum_spreads.append(np.mean(eval(momentum_spread)))
print(int(round(mean_momentum_spreads[1]/mean_momentum_spreads[0])))
" --pure-python --local | tail -n 1)"
# Expected rate of std(mom) between the two snapshots.
# Note that this depends slightly on the
# pseudo-random number generation.
momentum_spread_growth_expected_low=13
momentum_spread_growth_expected_high=14
if     [ ${momentum_spread_growth} -lt ${momentum_spread_growth_expected_low}  ] \
    || [ ${momentum_spread_growth} -gt ${momentum_spread_growth_expected_high} ]; then
    colorprint "Momentum spread grew by a factor ${momentum_spread_growth}, \
but expected it to be between ${momentum_spread_growth_expected_low} \
and ${momentum_spread_growth_expected_high}" "red"
    exit 1
fi

# Test ran successfully. Deactivate traps.
trap : 0
